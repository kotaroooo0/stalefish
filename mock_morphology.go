// Code generated by MockGen. DO NOT EDIT.
// Source: morphology/morphology.go

// Package stalefish is a generated GoMock package.
package stalefish

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	morphology "github.com/kotaroooo0/stalefish/morphology"
)

// MockMorphology is a mock of Morphology interface.
type MockMorphology struct {
	ctrl     *gomock.Controller
	recorder *MockMorphologyMockRecorder
}

// MockMorphologyMockRecorder is the mock recorder for MockMorphology.
type MockMorphologyMockRecorder struct {
	mock *MockMorphology
}

// NewMockMorphology creates a new mock instance.
func NewMockMorphology(ctrl *gomock.Controller) *MockMorphology {
	mock := &MockMorphology{ctrl: ctrl}
	mock.recorder = &MockMorphologyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMorphology) EXPECT() *MockMorphologyMockRecorder {
	return m.recorder
}

// Analyze mocks base method.
func (m *MockMorphology) Analyze(arg0 string) []morphology.MorphologyToken {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Analyze", arg0)
	ret0, _ := ret[0].([]morphology.MorphologyToken)
	return ret0
}

// Analyze indicates an expected call of Analyze.
func (mr *MockMorphologyMockRecorder) Analyze(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Analyze", reflect.TypeOf((*MockMorphology)(nil).Analyze), arg0)
}
